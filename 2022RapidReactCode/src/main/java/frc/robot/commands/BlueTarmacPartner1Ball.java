// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: SequentialCommandGroup.

package frc.robot.commands;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.RobotContainer;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class BlueTarmacPartner1Ball extends SequentialCommandGroup {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    public BlueTarmacPartner1Ball(){

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    addCommands(
        // Add Commands here:
        // Also add parallel commands using the
        //
        // addCommands(
        //      new command1(argsN, subsystem),
        //      parallel(
        //          new command2(argsN, subsystem),
        //          new command3(argsN, subsystem)
        //      )    
        //  );
                 //TODO: Change any rotate to headings to the correct angle and drive straights to the right distance
        parallel(new TurretAutoAim(RobotContainer.getInstance().m_turret),
        new ShooterToVelocity(RobotContainer.getInstance().m_flywheel)),//rev the shooter and aim the turret

        new BeltUpCommand(RobotContainer.getInstance().m_belt),//fires the ball

        new RotateToHeadingCommand(45, RobotContainer.getInstance().m_drive),//turns robot after firing

        //stop here if picking up no balls.
        parallel(new DriveStraightCommand(10, RobotContainer.getInstance().m_drive),
        new IntakeInCommand(RobotContainer.getInstance().m_intake)),//picks up first ball after driving to it

        parallel(new TurretAutoAim(RobotContainer.getInstance().m_turret),
        new ShooterToVelocity(RobotContainer.getInstance().m_flywheel)),//rev the shooter and aim the turret

        new BeltUpCommand(RobotContainer.getInstance().m_belt)//fires the ball

        //stop here and fire the ball if picking up one ball
        /*new RotateToHeadingCommand(45, RobotContainer.getInstance().m_drive),//turns the robot

        parallel(new DriveStraightCommand(10, RobotContainer.getInstance().m_drive)),
        new IntakeInCommand(RobotContainer.getInstance().m_intake),//picks up second ball, should now be holding two balls

        new RotateToHeadingCommand(45, RobotContainer.getInstance().m_drive),//turns the robot but could be used to turn in the direction of hub???

        parallel(new TurretAutoAim(RobotContainer.getInstance().m_turret),
        new ShooterToVelocity(RobotContainer.getInstance().m_flywheel)),//rev the shooter and aim the turret

        new BeltUpCommand(RobotContainer.getInstance().m_belt)//fire (for longer because 2 balls!)
        */

        );
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
