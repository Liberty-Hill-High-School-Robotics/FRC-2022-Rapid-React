// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.revrobotics.CANSparkMax; 
import com.revrobotics.CANSparkMaxLowLevel.MotorType;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Transversal extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
private final double TRANSVERSAL_POWER = .75;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private CANSparkMax canSparkMAXTransversal1;
private CANSparkMax canSparkMAXTransversal2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Transversal() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
canSparkMAXTransversal1 = new CANSparkMax(10, MotorType.kBrushless);
 
 

canSparkMAXTransversal2 = new CANSparkMax(9, MotorType.kBrushless);
 
 


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    // CAN ID 9 is the master Transverse2
    canSparkMAXTransversal2.setInverted(true);
    canSparkMAXTransversal1.follow(canSparkMAXTransversal2, true);

  
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void TransversalForward(){
    //canSparkMAXTransversal1.set(TRANSVERSAL_POWER);
    canSparkMAXTransversal2.set(TRANSVERSAL_POWER);
    }

    public void TransversalBack(){
      //  canSparkMAXTransversal1.set(-TRANSVERSAL_POWER);
        canSparkMAXTransversal2.set(-TRANSVERSAL_POWER);
    }

    public void TransversalStop(){
        //canSparkMAXTransversal1.stopMotor();
        canSparkMAXTransversal2.stopMotor();
    }

}

