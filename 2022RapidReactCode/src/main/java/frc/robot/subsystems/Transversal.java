// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

// ***********************************************************************************************
// * 2/28/2022 Remove all AUTO-GENERATE COMMENTS
// ***********************************************************************************************

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import com.revrobotics.CANSparkMax;
import com.revrobotics.CANSparkMax.IdleMode;
import com.revrobotics.CANSparkMaxLowLevel.MotorType;

/**
 *
 */
public class Transversal extends SubsystemBase {
    private final double TRANSVERSAL_POWER = .75;

    private CANSparkMax canSparkMAXTransversal1;
    private CANSparkMax canSparkMAXTransversal2;
   
    /**
    *
    */
    public Transversal() {
        canSparkMAXTransversal2 = new CANSparkMax(8, MotorType.kBrushless); // Master // change can ID to 8 becasue we need worky on lift
        canSparkMAXTransversal2.setInverted(true);
        canSparkMAXTransversal2.setIdleMode(IdleMode.kBrake);

        canSparkMAXTransversal1 = new CANSparkMax(10, MotorType.kBrushless);
        canSparkMAXTransversal1.follow(canSparkMAXTransversal2, true);
        canSparkMAXTransversal1.setIdleMode(IdleMode.kBrake);
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void TransversalForward(){
        canSparkMAXTransversal2.set(TRANSVERSAL_POWER);
    }

    public void TransversalBack(){
        canSparkMAXTransversal2.set(-TRANSVERSAL_POWER);
    }

    public void TransversalStop(){
        canSparkMAXTransversal2.stopMotor();
    }

}

